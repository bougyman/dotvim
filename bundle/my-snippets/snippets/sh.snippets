snippet bash_here 
	# Set $here to the full path to this script
	me=${BASH_SOURCE[0]}
	[ -L "$me" ] && me=$(readlink -f "$me")
	here=$(cd "$(dirname "$me")" && pwd)
snippet bash_vim
	# vim: set foldmethod=marker et ts=4 sts=4 sw=4 :
snippet bash_err
	# {{{ fail/bail on all errors
	set -e
	${0}
	set +e
	# }}} errors no longer fatal/halt
snippet bash_debug
	# {{{ Print bash debugging info
	set -v
	${0}
	set +v
	# }}} Stop printing debug info
snippet bash_die
	die() { # {{{
	  local -i code
		code=\$1
		shift
		echo "Error! => $*" >&2
		echo >&2
		usage >&2
		# shellcheck disable=SC2086
		exit $code
	} # }}}
	${0}
snippet bash_usage
	usage() { # {{{
		cat <<-EOT
		Usage: \$0 <options> ${1}
			Options:
				${2}
				-h            Show help / usage
	EOT
	} # }}}
	${0}
snippet bash_getopts
	while getopts :h${1} opt # {{{
	do
		case $opt in
			${2})
				${3}
				;;
			h)
				usage
				exit
				;;
			\?)
				echo "Invalid option '${OPTARG}'" >&2
				usage >&2
				exit 27
				;;
			:)
				echo "Option ${OPTARG} requires an argument" >&2
				usage >&2
				exit 28
				;;
		esac
	done # }}}
	shift $((OPTIND-1))
	${0}
snippet containsElement
	containsElement () { # {{{
	  local e match
	  match=\$1
	  shift
	  for e
	  do
		  [[ "$e" == "$match" ]] && return 0
	  done
	  return 1
	} # }}}
