set modeline
set ts=2              " Tab Stop 2
set sw=2              " Shift-width 2
set et                " Expand tabs to spaces
set t_Co=256          " 256 color support
set bg=dark           " Dark background
set nocompatible      " We're running Vim, not Vi!
syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins
compiler ruby         " Enable compiler support for ruby
set ai                " auto indent
set laststatus=2      " so airline always shows up
set ofu=syntaxcomplete#Complete " Omnicomplete
" Toggle the tlist tag window with F8
let Tlist_GainFocus_On_ToggleOpen=1 " Focus the tag list when it opens
let g:user_emmet_leader_key='<C-e>'
let g:slime_target = "tmux"
set pastetoggle=<F10> " Paste toggle is F10
nmap <F8> :TagbarToggle<CR>
map <F9> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
map <F3> :vertical wincmd f<CR>
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_check_on_open=1
let g:syntastic_enable_signs=1
let g:syntastic_auto_jump=1
let g:syntastic_sh_shellcheck_args="-x"
let g:syntastic_ruby_checkers=['rubocop']
let g:syntastic_php_checkers=['php']
let g:syntastic_json_checkers=['jsonlint', 'jsonval']
let g:syntastic_twig_checkers=['twiglint']
" let g:syntastic_auto_loc_list=0
let g:syntastic_enable_highlighting=1
let g:syntastic_echo_current_error=1
let g:syntastic_yaml_checkers = ['yamllint', 'jsyaml']

" Whitespace
let g:better_whitespace_enabled=1
let g:strip_whitespace_on_save=1

autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
colorscheme wellsokai
set hidden
autocmd BufRead,BufNewFile *.md setlocal spell
autocmd BufRead,BufNewFile *.adoc setlocal spell
autocmd BufRead,BufNewFile README setlocal spell
autocmd BufRead,BufNewFile Readme setlocal spell
autocmd BufRead,BufNewFile README.* setlocal spell
autocmd BufRead,BufNewFile Readme.* setlocal spell
autocmd FileType gitcommit setlocal spell


" If buffer modified, update any 'Last modified: ' in the first 20 lines.
" 'Last modified: ' can have up to 10 characters before (they are retained).
" Restores cursor and window position using save_cursor variable.
function! LastModified()
  if &modified
    let save_cursor = getpos(".")
    let n = min([20, line("$")])
    keepjumps exe '1,' . n . 's#^\(.\{,10}lastModified: \).*#\1' .
          \ strftime('%a %b %d, %Y  %I:%M%p') . '#e'
    call histdel('search', -1)
    keepjumps exe '1,' . n . 's#^\(.\{,10}Last Modified: \).*#\1' .
          \ strftime('%a %b %d, %Y  %I:%M%p') . '#e'
    call histdel('search', -1)
    call setpos('.', save_cursor)
  endif
endfun
autocmd BufWritePre * call LastModified()
